---
- name: "Enable PostgreSql"
  shell: amazon-linux-extras enable postgresql14 -y

- name: "AmazonLinux - Install Packages"
  yum:
    name: 
      - httpd
      - postgresql-server
      - python-psycopg2
      - php-pgsql
      - git
    state: present
  tags:
    - lamp
 
- name: "AmazonLinux - Install PHP7.4 Packages"
  shell: amazon-linux-extras install php7.4 -y
  tags:
    - lamp
 
- name: "AmazonLinux - Build Apache httpd.conf from httpd.conf.j2 Template"
  template:
    src: ./httpd.conf.j2
    dest: /etc/httpd/conf/httpd.conf
  tags:
    - lamp
 
- name: "AmazonLinux - Build Apache VirtualHost from virtualhost.conf.j2"
  template:
    src: "./virtualhost.conf.j2"
    dest: "/etc/httpd/conf.d/{{ httpd_domain }}.conf"
    owner: "{{ httpd_owner }}"
    group: "{{ httpd_group }}"
  tags:
    - lamp
 
- name: "AmazonLinux - Create Apache Docuemnt Root for /var/www/html/{{ httpd_domain }}"
  file:
    path: "/var/www/html/{{ httpd_domain }}"
    state: directory
    owner: "{{ httpd_owner }}"
    group: "{{ httpd_group }}"
  tags:
    - lamp

- name: "Find out if PostgreSQL is initialized"
  stat:
    path: "/var/lib/pgsql/data/pg_hba.conf"
  register: postgres_data

- name: "Initialize Postgresql"
  when: postgres_data.stat.exists == false
  shell: "postgresql-setup initdb"

- name: "Postgres - Server Restart/enable"
  service:
    name: postgresql
    state: restarted
    enabled: true

- name: "Postgres - Configure {{ mariadb_wp_user }}"
  postgresql_user:
    name: "{{ mariadb_wp_user }}"
    password: "{{ mariadb_wp_passwd }}"
    state: present
  become: yes
  become_user: postgres

- name: "Postgres - Create {{ mariadb_wp_db }}"
  postgresql_db:
    state: present
    name: "{{ mariadb_wp_db }}"
  become: yes
  become_user: postgres

- name: "Postgres - Grant Privilages to {{ mariadb_wp_user }} on DB {{ mariadb_wp_db }}"
  postgresql_privs:
    type: database
    database: "{{ mariadb_wp_db }}"
    roles: "{{ mariadb_wp_user }}"
    grant_option: no
    privs: all
  become: yes
  become_user: postgres

- name: "Allow MD5 Connection"
  postgresql_pg_hba:
    dest: "~/data/pg_hba.conf"
    contype: host
    databases: all
    users: all
    method: md5
    create: true
  become: yes
  become_user: postgres

- name: "AmazonLinux - Download WordPress Setup Files from {{ wp_url }}"
  get_url:
    url: "{{ wp_url }}"
    dest: "/tmp/wordpress.zip"
  tags:
    - wordpress
 
- name: "AmazonLinux - Extract WordPress Setup Files to /tmp"
  unarchive:
    src: "/tmp/wordpress.zip"
    dest: "/tmp"
    remote_src: true
  tags:
    - wordpress
 
- name: "AmazonLinux - Copy WordPress Files to /var/www/html/{{ httpd_domain }}"
  copy:
    src: "/tmp/wordpress/"
    dest: "/var/www/html/{{ httpd_domain }}"
    remote_src: true
    owner: "{{ httpd_owner }}"
    group: "{{ httpd_group }}"
  tags:
    - wordpress
 
- name: "AmazonLinux - Build WordPress wp-config.php from wp-config.php.j2"
  template:
    src: "./wp-config.php.j2"
    dest: "/var/www/html/{{ httpd_domain }}/wp-config.php"
    owner: "{{ httpd_owner }}"
    group: "{{ httpd_group }}"
  tags:
    - wordpress

- name: "Add Postgres Support for WordPress"
  git:
    repo: "https://github.com/kevinoid/postgresql-for-wordpress.git"
    dest: "/var/www/html/{{ httpd_domain }}/wp-content/postgresql-for-wordpress"

- name: "Copy pg4wp"
  copy:
    remote_src: true
    src: "/var/www/html/{{ httpd_domain }}/wp-content/postgresql-for-wordpress/pg4wp"
    dest: "/var/www/html/{{ httpd_domain }}/wp-content/"
    owner: "{{ httpd_owner }}"
    group: "{{ httpd_group }}"

- name: "Copy db.php"
  copy:
    remote_src: true
    src: "/var/www/html/{{ httpd_domain }}/wp-content/pg4wp/db.php"
    dest: "/var/www/html/{{ httpd_domain }}/wp-content/"
 
- name: "AmazonLinux - Post WordPress Installation Service Restart"
  service:
    name: "{{ item }}"
    state: restarted
    enabled: true
  with_items:
    - httpd
    - postgresql
    - php-fpm
  tags:
    - lamp
 
- name: "AmazonLinux - Post WordPress Installation Cleanup"
  file:
    name: "{{ item }}"
    state: absent
  with_items:
    - "/tmp/wordpress/"
    - "/tmp/wordpress.zip"
  tags:
    - Wordpress
